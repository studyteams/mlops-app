# Generated by Django 4.2.23 on 2025-07-08 15:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mymlopsapp1', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='실험의 고유 이름', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0.0', help_text='실험 버전', max_length=20)),
                ('status', models.CharField(choices=[('planned', '계획됨'), ('running', '실행 중'), ('completed', '완료'), ('failed', '실패'), ('cancelled', '취소됨')], default='planned', max_length=20)),
                ('tags', models.TextField(blank=True, help_text='실험 태그 (JSON 배열 형식)')),
                ('created_by', models.CharField(default='system', help_text='실험 생성자', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('dataset_config', models.ForeignKey(help_text='이 실험에서 사용할 데이터셋', on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='mymlopsapp1.datasetconfig')),
                ('feature_config', models.ForeignKey(help_text='이 실험에서 사용할 피처 조합', on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='mymlopsapp1.featureconfig')),
                ('model_config', models.ForeignKey(help_text='이 실험에서 사용할 모델 설정', on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='mymlopsapp1.modelconfig')),
            ],
            options={
                'verbose_name': '실험',
                'verbose_name_plural': '실험',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='자원 할당 설정의 고유 이름', max_length=100, unique=True)),
                ('cpu_cores', models.IntegerField(default=1, help_text='할당할 CPU 코어 수', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(32)])),
                ('memory_gb', models.IntegerField(default=2, help_text='할당할 메모리 (GB)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(128)])),
                ('gpu_count', models.IntegerField(default=0, help_text='할당할 GPU 개수', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(8)])),
                ('gpu_memory_gb', models.IntegerField(default=0, help_text='GPU당 메모리 (GB)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(32)])),
                ('max_training_time_hours', models.FloatField(default=24.0, help_text='최대 훈련 시간 (시간)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(168.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '자원 할당 설정',
                'verbose_name_plural': '자원 할당 설정',
            },
        ),
        migrations.CreateModel(
            name='ExperimentRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(help_text='실행 ID', max_length=50, unique=True)),
                ('run_number', models.IntegerField(help_text='실험 내 실행 번호')),
                ('status', models.CharField(choices=[('queued', '대기 중'), ('running', '실행 중'), ('completed', '완료'), ('failed', '실패'), ('cancelled', '취소됨')], default='queued', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('actual_cpu_cores', models.IntegerField(blank=True, null=True)),
                ('actual_memory_gb', models.FloatField(blank=True, null=True)),
                ('actual_gpu_count', models.IntegerField(blank=True, null=True)),
                ('logs', models.TextField(blank=True, help_text='실행 로그')),
                ('error_message', models.TextField(blank=True, help_text='오류 메시지')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('experiment', models.ForeignKey(help_text='실험', on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='mymlopsapp1.experiment')),
                ('training_result', models.ForeignKey(blank=True, help_text='훈련 결과', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='experiment_runs', to='mymlopsapp1.trainingresult')),
            ],
            options={
                'verbose_name': '실험 실행',
                'verbose_name_plural': '실험 실행',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='experiment',
            name='resource_allocation',
            field=models.ForeignKey(help_text='이 실험에 할당할 자원', on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='mymlopsapp1.resourceallocation'),
        ),
    ]
